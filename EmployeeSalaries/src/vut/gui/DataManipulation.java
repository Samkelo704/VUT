/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vut.gui;

import java.text.NumberFormat;
import javax.swing.JOptionPane;
import vut.Employees;
import vut.Employees.EmployT;
import static vut.gui.DataEntry.objHourlyE;

/**
 *
 * @author samkelo
 */
public class DataManipulation extends javax.swing.JFrame
{

    /**
     * Creates new form DataManipulation
     */
    public DataManipulation()
    {
        initComponents();
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cmbIDnumbers = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDisplay = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbIDnumbers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID number" }));
        cmbIDnumbers.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbIDnumbersActionPerformed(evt);
            }
        });

        taDisplay.setColumns(20);
        taDisplay.setRows(5);
        jScrollPane1.setViewportView(taDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbIDnumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbIDnumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbIDnumbersActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbIDnumbersActionPerformed
    {//GEN-HEADEREND:event_cmbIDnumbersActionPerformed
NumberFormat curr = NumberFormat.getCurrencyInstance();
        String Selected = (String) cmbIDnumbers.getSelectedItem();
        
        for (int i = 0; i < DataEntry.objHourlyE.size();i++){
            if (DataEntry.objHourlyE.get(i).getIDnumber().matches(Selected)){
                if (DataEntry.objHourlyE.get(i).getTypesE()== EmployT.HOURLY){
                  int  wh =Integer.parseInt(JOptionPane.showInputDialog("Enter your worked Hours"));
                    
                    taDisplay.setText("Name = "+DataEntry.objHourlyE.get(i).getName()+ "\n");
           taDisplay.append("Employee ID = " + DataEntry.objHourlyE.get(i).getIDnumber()+"\n");
            taDisplay.append("Employee Type = " + DataEntry.objHourlyE.get(i).getTypesE()+"\n");
             taDisplay.append("Hourly Wage = " +DataEntry.objHourlyE.get(i).getHourlyWage()+"\n");
             taDisplay.append("Worked Hours = " + wh + " hours" +"\n");
             taDisplay.append("Weekly Pay = " + curr.format(DataEntry.objHourlyE.get(i).WeeklyPay(wh)) + "\n");
             taDisplay.append("**********************************************************");
                }
                
            }
        }
        for (int k = 0; k < DataEntry.objSalariedE.size(); k++){
        if (DataEntry.objSalariedE.get(k).getIDnumber().matches(Selected)){
            if(DataEntry.objSalariedE.get(k).getTypesE()== EmployT.SALARIED){
                int wh =Integer.parseInt(JOptionPane.showInputDialog("Enter your worked Hours"));
                                 taDisplay.setText("Name = "+DataEntry.objSalariedE.get(k).getName()+ "\n");
           taDisplay.append("Employee ID = " + DataEntry.objSalariedE.get(k).getIDnumber()+"\n");
            taDisplay.append("Employee Type = " + DataEntry.objSalariedE.get(k).getTypesE()+"\n");
             taDisplay.append("Annual Salary = " +DataEntry.objSalariedE.get(k).getAnnualSalary()+"\n");
             taDisplay.append("Worked Hours = " + wh + " hours" +"\n");
             taDisplay.append("Weekly Pay = " + curr.format(DataEntry.objSalariedE.get(k).WeeklyPay(wh)) + "\n");
             taDisplay.append("**********************************************************");
            }
        }
    }
        for (int j = 0 ; j < DataEntry.objManagerE.size(); j++){
            if (DataEntry.objManagerE.get(j).getIDnumber().matches(Selected)){
                if(DataEntry.objManagerE.get(j).getTypesE()== EmployT.MANAGER){
                     int wh =Integer.parseInt(JOptionPane.showInputDialog("Enter your worked Hours"));
                 taDisplay.setText("Name = "+DataEntry.objManagerE.get(j).getName()+ "\n");
           taDisplay.append("Employee ID = " + DataEntry.objManagerE.get(j).getIDnumber()+"\n");
            taDisplay.append("Employee Type = " + DataEntry.objManagerE.get(j).getTypesE()+"\n");
             taDisplay.append("Annual Salary = " +DataEntry.objManagerE.get(j).getAnnualSalary()+"\n");
             taDisplay.append("Worked Hours = " + wh + " hours" +"\n");
             taDisplay.append("Weekly Bonus = " +DataEntry.objManagerE.get(j).getWeeklyBonus()+"\n");
             taDisplay.append("Weekly Pay = " + curr.format(DataEntry.objManagerE.get(j).WeeklyPay(wh)) + "\n");
             taDisplay.append("**********************************************************");
                }
            }
        }
        
    }//GEN-LAST:event_cmbIDnumbersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(DataManipulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(DataManipulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(DataManipulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(DataManipulation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new DataManipulation().setVisible(true);
            }
        });
    }
    private void populate(){
        for (int i = 0; i< DataEntry.objHourlyE.size();i++){
            cmbIDnumbers.addItem(DataEntry.objHourlyE.get(i).getIDnumber());
        }
        for(int j = 0; j < DataEntry.objManagerE.size(); j++){
            cmbIDnumbers.addItem(DataEntry.objManagerE.get(j).getIDnumber());
        }
        for(int k = 0; k< DataEntry.objSalariedE.size(); k++){
            cmbIDnumbers.addItem(DataEntry.objSalariedE.get(k).getIDnumber());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbIDnumbers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taDisplay;
    // End of variables declaration//GEN-END:variables
}
